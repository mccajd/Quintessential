[gd_scene load_steps=4 format=3 uid="uid://deotuon6iqc5s"]

[ext_resource type="Texture2D" uid="uid://yooteyg1faxw" path="res://assets/wanderer.png" id="1_ultck"]

[sub_resource type="GDScript" id="GDScript_1c1ks"]
resource_name = "player"
script/source = "extends CharacterBody2D


const speed = 2
var astar_grid  : AStarGrid2D
var tile_map    : TileMap
var tile_size   : Vector2i
var start_tile  : Vector2i
var target      : Vector2i
var target_tile : Vector2i
var path        : PackedVector2Array 

func _ready():
	tile_map = get_parent().find_child(\"TileMap\")
	tile_size = tile_map.tile_set.tile_size
	
	target = position
	start_tile = tile_map.local_to_map(Vector2i.ZERO)
	
	astar_grid = AStarGrid2D.new()
	astar_grid.region = tile_map.get_used_rect()
	astar_grid.cell_size = tile_size
	astar_grid.offset = Vector2i.ZERO
	astar_grid.diagonal_mode = AStarGrid2D.DIAGONAL_MODE_ALWAYS
	astar_grid.update()
	
func _physics_process(delta):
	move_to_point()
	pass
	
func get_direction(start:Vector2, dest:Vector2):
	return (dest-start)
	
func move_to_point():
	if !path.is_empty():
		var cur_position = position-Vector2(32,32)
		if path[0] != cur_position:
			#direction vector of A->B = (B.X-A.X)(B.Y-A.Y)
			position += sign(path[0]-cur_position)*speed
		else:
			path.remove_at(0)
			
func _input(event):
	if event.is_action_pressed(\"lmb_click\"):
		target = get_global_mouse_position()
		target_tile = tile_map.local_to_map(target)
		start_tile  = tile_map.local_to_map(position-Vector2(32,32))
		path = astar_grid.get_point_path(start_tile,target_tile)
		queue_redraw()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_dchqe"]
size = Vector2(54, 127)

[node name="SophmorePlayer" type="CharacterBody2D"]
scale = Vector2(0.5, 0.5)
script = SubResource("GDScript_1c1ks")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 1
texture = ExtResource("1_ultck")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(1, -0.5)
shape = SubResource("RectangleShape2D_dchqe")
